app:
  port: 3000
  name: "DarkDungeonBE"
  description: "darkdungeonBE"
  version: "1.0.0"
  pathSwagger: "api/darkdungeonBE"

db:
  mongo:
    host: "127.0.0.1:27017"
    dbname: "DarkDungeon"

gameplay:
  events:
    stage :
    - spawnRandomItem 
    - hiddenPath
    - ambush
    - Door
    - Statue Of Curse
    - Statue Of Healing
    - Puzzle
    - Treasure Chest
    - Monster Encounter
    - NPC Interaction 
    - Quest
    - Trap
    - Shop
    - Teleportation
    - Time Warp
    - Maze 
    - Boss Battle
    - Artifact Discovery
    - Invisible Bridge
    - Spike Trap
    - Fountain Of Healing
    - Hallucination
    - Secret Passage
    - Fire Pit
    - Enchanted Forest
    - Spirit Guardian
    - Cursed Treasure
    - Ancient Ruins
    - Guarded Gate
    - Celestial Shrine
    - Shadowy Figure
    - Lost Key
    - Magical Portal
    - Riddle
    - Illusionary Wall
    - Giant Spider
    - Healing Spring
    - Ancient Scroll
    - Mysterious Aura
    - Time Loop
    - Shifting Sands
    - Ethereal Bridge
    - Goblin Raid
    - Haunted Tomb
    - Whirlpool
    - Guardian Statue
    - Floating Island
    - Mirror Maze
    - Mystical Beacon
    - Dragon's Lair
    - Demonic Possession
    - Guardian Spirit
    - Labyrinth
    - Underwater Cave
    - Crystal Golem
    - Giant Mushroom
    - Lost Civilization
    - Haunted Forest
    - Witch's Hut 
    - Fairy Ring 
    - Volcanic Eruption 
    - Ancient Crypt 
    - Spiritual Cleansing
    - Dark Ritual 
    - Siren's Song
    - Frozen Tundra
    - Sacred Relic
    - Mystic Gate
    - Hidden Treasure
    - Divine Intervention
    - Enchanted Weapon
    - Sorcerer's Apprentice
    - Guardian Beast
    - Eternal Flame
    - Cursed Amulet
    - Portal To Another Realm
    - Eerie Whisper
    - Magical Trinket
    - Ancient Oak
    - Spectral Vision
    - Mystic Runes
    - Enchanted Armor
    - Phantom Wraith
    - Ethereal Veil
    - Cavern Of Shadows
    - Emerald Forest
    - Guardian Dragon
    - Lost Compass
    - Celestial Alignment
    - Time Travel
    - Spiritual Enlightenment
    - Secret Chamber
    - Mystical Cavern
    - Legendary Artifact
    - Guardian of Light
    - Nightfall Ritual
    - Eternal Guardian
    - Cursed Curse
    - Fountain of Youth


logger:
  config:
    projectName: "DarkDungeon"
    log:
      time: 60
      size: null
      path: "./logs/DarkDungeon_local/log"
      level: "info"
      format: "json"
      console: false
      file: true
      stream: true
    detail:
      time: 60
      size: null
      path: "./logs/DarkDungeon_local/detail"
      level: "debug"
      format: "json"
      console: false
      file: true
      stream: true
      rawData: true
    summary:
      time: 60
      size: null
      path: "./logs/DarkDungeon_local/summary"
      level: "debug"
      console: false
      file: true
      format: "json"
    stat:
      time: 60
      size: null
      path: "./logs/DarkDungeon_local/stat"
      mode: 0
      statInterval: 1
      console: false
      file: true
      stream: true
      kafka: false
      prometheus: true
      prometheusMode: "multi"
      flush: true
      format: "json"
      process: [] 
  statPattern:
    suc: "<nodeName> <type> <destNode> <command> <action>"
    err: "<nodeName> <type> <destNode> <command> error <action>"
    requestUnknown: "<nodeName> received bad <command> request"
    returnUnknown: "<nodeName> returned <command> error"
    requestMissingOrInvalid: "<nodeName> received bad <command> request"
    receivedRequest: "<nodeName> received <command> request"
    returnedSuccess: "<nodeName> returned <command> success"
    receivedUnknownUrl: "<nodeName> received <command> error"
    returnedError: "<nodeName> returned <command> error"
    returnedunknown: "<nodeName> returned <command> error"
    errConnection: "<nodeName> <type> <destNode> <command> connection error"
    timeoutConnection: "<nodeName> <type> <destNode> <command> timeout"
    type:
      recv: "recv"
      send: "sent"
      request: "request"
      received: "received"
      returned: "returned"
    action:
      req: "request"
      res: "response"
      response: "response"
      timeout: "timeout"
      connectionError: "connection error"
      responseError: "error response"
    delimiter: "__"

corsSetting:
  origin: '*'
  method: ['POST', 'PUT', 'GET', 'DELETE', 'OPTIONS', 'PATCH']
  credentail: false
  allowedHeaders: ['Origin', 'Content-Type', 'Accept']
